/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ –±–∞–∫–µ—Ç–∞
 */

import { S3Client, ListObjectsV2Command, DeleteObjectsCommand } from "@aws-sdk/client-s3";
import dotenv from "dotenv";

dotenv.config();

const s3Client = new S3Client({
  region: process.env.S3_REGION || "ru-central1",
  endpoint: process.env.S3_ENDPOINT || "https://storage.yandexcloud.net",
  credentials: {
    accessKeyId: process.env.S3_ACCESS_KEY || "",
    secretAccessKey: process.env.S3_SECRET_KEY || "",
  },
  forcePathStyle: true,
});

const BUCKET_NAME = process.env.S3_BUCKET || "beatstore";

async function clearBucket() {
  console.log(`üóëÔ∏è  –£–¥–∞–ª—è—é –≤—Å–µ —Ñ–∞–π–ª—ã –∏–∑ –±–∞–∫–µ—Ç–∞ "${BUCKET_NAME}"...\n`);

  try {
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    const listCommand = new ListObjectsV2Command({
      Bucket: BUCKET_NAME,
    });

    const response = await s3Client.send(listCommand);

    if (!response.Contents || response.Contents.length === 0) {
      console.log("‚ÑπÔ∏è  –ë–∞–∫–µ—Ç —É–∂–µ –ø—É—Å—Ç–æ–π\n");
      return;
    }

    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: ${response.Contents.length}\n`);

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã
    const deleteCommand = new DeleteObjectsCommand({
      Bucket: BUCKET_NAME,
      Delete: {
        Objects: response.Contents.map(obj => ({ Key: obj.Key })),
        Quiet: false,
      },
    });

    const deleteResponse = await s3Client.send(deleteCommand);

    if (deleteResponse.Deleted) {
      console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${deleteResponse.Deleted.length}\n`);
      deleteResponse.Deleted.forEach(obj => {
        console.log(`   ‚úì ${obj.Key}`);
      });
    }

    if (deleteResponse.Errors && deleteResponse.Errors.length > 0) {
      console.log(`\n‚ùå –û—à–∏–±–∫–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏:\n`);
      deleteResponse.Errors.forEach(err => {
        console.log(`   ‚úó ${err.Key}: ${err.Message}`);
      });
    }

    console.log(`\n‚úÖ –ì–û–¢–û–í–û! –ë–∞–∫–µ—Ç –æ—á–∏—â–µ–Ω\n`);

  } catch (error) {
    console.error(`\n‚ùå –û–®–ò–ë–ö–ê:`, error.message);
    process.exit(1);
  }
}

clearBucket();
