import pg from "pg";

const { Pool } = pg;

// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const pool = new Pool({
  host: process.env.DB_HOST || "localhost",
  port: Number(process.env.DB_PORT) || 5432,
  user: process.env.DB_USER || "beatstore_user",
  password: process.env.DB_PASSWORD || "simple123",
  database: process.env.DB_NAME || "beatstore_db",
  max: 20, // –º–∞–∫—Å–∏–º—É–º 20 –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –≤ –ø—É–ª–µ
  idleTimeoutMillis: 30000,
  connectionTimeoutMillis: 2000,
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—É–ª–∞
pool.on("error", (err) => {
  console.error("‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ PostgreSQL:", err);
});

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 */
export async function testConnection(): Promise<boolean> {
  try {
    const client = await pool.connect();
    const result = await client.query("SELECT NOW() as now, version() as version");
    console.log("‚úÖ PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!");
    console.log("‚è∞ –í—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞ –ë–î:", result.rows[0].now);
    console.log("üì¶ –í–µ—Ä—Å–∏—è PostgreSQL:", result.rows[0].version.split(" ")[0]);
    client.release();
    return true;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL:", error);
    return false;
  }
}

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å - –ø–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ test_connection
 */
export async function getTestMessage(): Promise<string | null> {
  try {
    const result = await pool.query(
      "SELECT message FROM test_connection ORDER BY id DESC LIMIT 1"
    );
    if (result.rows.length > 0) {
      return result.rows[0].message;
    }
    return null;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
    return null;
  }
}

/**
 * –ó–∞–∫—Ä—ã—Ç—å –≤—Å–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—É–ª–∞ (–≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
 */
export async function closePool(): Promise<void> {
  await pool.end();
  console.log("üîå PostgreSQL –ø—É–ª –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∑–∞–∫—Ä—ã—Ç");
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—É–ª –¥–ª—è –ø—Ä—è–º–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
export { pool };

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
//
// import { testConnection, getTestMessage, pool } from "./db.js";
//
// // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
// await testConnection();
//
// // –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
// const message = await getTestMessage();
// console.log("–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –ë–î:", message);
//
// // –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –ø—É–ª
// const result = await pool.query("SELECT * FROM users LIMIT 10");
// console.log(result.rows);
//
