version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: beatstore-postgres
    restart: always
    environment:
      POSTGRES_DB: beatstore_db
      POSTGRES_USER: beatstore_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U beatstore_user -d beatstore_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - beatstore-network

  app:
    image: node:18-alpine
    container_name: beatstore-app
    restart: always
    working_dir: /app
    volumes:
      - ./server:/app/server
      - ./client/dist:/app/client/dist
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
    env_file:
      - ./server/.env
    command: sh -c "cd server && npm ci --only=production && node dist/index.js"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - beatstore-network

volumes:
  postgres_data:
    driver: local

networks:
  beatstore-network:
    driver: bridge
